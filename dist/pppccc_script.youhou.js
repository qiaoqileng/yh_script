// ==UserScript==
// @name         Smart List Crawler
// @namespace    http://tampermonkey.net/
// @version      0.3.4
// @description  智能列表爬虫，支持手动/自动模式采集数据，支持持久化配置、导入导出配置及类似开发者工具的元素选取和数据过滤功能，同时 siteConfig 中的字段可动态增加和删除
// @author       YourName
// @match        *://*.taobao.com/*
// @match        *://*.zhihu.com/*
// @grant        GM_xmlhttpRequest
// @grant        GM_addStyle
// @grant        GM_setValue
// @grant        GM_getValue
// @updateURL    https://raw.githubusercontent.com/qiaoqileng/yh_script/refs/heads/master/dist/pppccc_script.youhou.js
// @downloadURL  https://raw.githubusercontent.com/qiaoqileng/yh_script/refs/heads/master/dist/pppccc_script.youhou.js
// @require      https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js
// ==/UserScript==
/*! For license information please see pppccc_script.youhou.js.LICENSE.txt */
(()=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(){e=function(){return r};var n,r={},o=Object.prototype,i=o.hasOwnProperty,a=Object.defineProperty||function(t,e,n){t[e]=n.value},c="function"==typeof Symbol?Symbol:{},l=c.iterator||"@@iterator",u=c.asyncIterator||"@@asyncIterator",d=c.toStringTag||"@@toStringTag";function s(t,e,n){return Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{s({},"")}catch(n){s=function(t,e,n){return t[e]=n}}function f(t,e,n,r){var o=e&&e.prototype instanceof b?e:b,i=Object.create(o.prototype),c=new N(r||[]);return a(i,"_invoke",{value:O(t,n,c)}),i}function p(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}r.wrap=f;var v="suspendedStart",h="suspendedYield",m="executing",y="completed",g={};function b(){}function x(){}function w(){}var E={};s(E,l,(function(){return this}));var S=Object.getPrototypeOf,L=S&&S(S(B([])));L&&L!==o&&i.call(L,l)&&(E=L);var _=w.prototype=b.prototype=Object.create(E);function k(t){["next","throw","return"].forEach((function(e){s(t,e,(function(t){return this._invoke(e,t)}))}))}function I(e,n){function r(o,a,c,l){var u=p(e[o],e,a);if("throw"!==u.type){var d=u.arg,s=d.value;return s&&"object"==t(s)&&i.call(s,"__await")?n.resolve(s.__await).then((function(t){r("next",t,c,l)}),(function(t){r("throw",t,c,l)})):n.resolve(s).then((function(t){d.value=t,c(d)}),(function(t){return r("throw",t,c,l)}))}l(u.arg)}var o;a(this,"_invoke",{value:function(t,e){function i(){return new n((function(n,o){r(t,e,n,o)}))}return o=o?o.then(i,i):i()}})}function O(t,e,r){var o=v;return function(i,a){if(o===m)throw Error("Generator is already running");if(o===y){if("throw"===i)throw a;return{value:n,done:!0}}for(r.method=i,r.arg=a;;){var c=r.delegate;if(c){var l=C(c,r);if(l){if(l===g)continue;return l}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(o===v)throw o=y,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);o=m;var u=p(t,e,r);if("normal"===u.type){if(o=r.done?y:h,u.arg===g)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(o=y,r.method="throw",r.arg=u.arg)}}}function C(t,e){var r=e.method,o=t.iterator[r];if(o===n)return e.delegate=null,"throw"===r&&t.iterator.return&&(e.method="return",e.arg=n,C(t,e),"throw"===e.method)||"return"!==r&&(e.method="throw",e.arg=new TypeError("The iterator does not provide a '"+r+"' method")),g;var i=p(o,t.iterator,e.arg);if("throw"===i.type)return e.method="throw",e.arg=i.arg,e.delegate=null,g;var a=i.arg;return a?a.done?(e[t.resultName]=a.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=n),e.delegate=null,g):a:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,g)}function j(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function A(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function N(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(j,this),this.reset(!0)}function B(e){if(e||""===e){var r=e[l];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,a=function t(){for(;++o<e.length;)if(i.call(e,o))return t.value=e[o],t.done=!1,t;return t.value=n,t.done=!0,t};return a.next=a}}throw new TypeError(t(e)+" is not iterable")}return x.prototype=w,a(_,"constructor",{value:w,configurable:!0}),a(w,"constructor",{value:x,configurable:!0}),x.displayName=s(w,d,"GeneratorFunction"),r.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===x||"GeneratorFunction"===(e.displayName||e.name))},r.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,w):(t.__proto__=w,s(t,d,"GeneratorFunction")),t.prototype=Object.create(_),t},r.awrap=function(t){return{__await:t}},k(I.prototype),s(I.prototype,u,(function(){return this})),r.AsyncIterator=I,r.async=function(t,e,n,o,i){void 0===i&&(i=Promise);var a=new I(f(t,e,n,o),i);return r.isGeneratorFunction(e)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},k(_),s(_,d,"Generator"),s(_,l,(function(){return this})),s(_,"toString",(function(){return"[object Generator]"})),r.keys=function(t){var e=Object(t),n=[];for(var r in e)n.push(r);return n.reverse(),function t(){for(;n.length;){var r=n.pop();if(r in e)return t.value=r,t.done=!1,t}return t.done=!0,t}},r.values=B,N.prototype={constructor:N,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=n,this.done=!1,this.delegate=null,this.method="next",this.arg=n,this.tryEntries.forEach(A),!t)for(var e in this)"t"===e.charAt(0)&&i.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=n)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function r(r,o){return c.type="throw",c.arg=t,e.next=r,o&&(e.method="next",e.arg=n),!!o}for(var o=this.tryEntries.length-1;o>=0;--o){var a=this.tryEntries[o],c=a.completion;if("root"===a.tryLoc)return r("end");if(a.tryLoc<=this.prev){var l=i.call(a,"catchLoc"),u=i.call(a,"finallyLoc");if(l&&u){if(this.prev<a.catchLoc)return r(a.catchLoc,!0);if(this.prev<a.finallyLoc)return r(a.finallyLoc)}else if(l){if(this.prev<a.catchLoc)return r(a.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return r(a.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&i.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var o=r;break}}o&&("break"===t||"continue"===t)&&o.tryLoc<=e&&e<=o.finallyLoc&&(o=null);var a=o?o.completion:{};return a.type=t,a.arg=e,o?(this.method="next",this.next=o.finallyLoc,g):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),g},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),A(n),g}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if("throw"===r.type){var o=r.arg;A(n)}return o}}throw Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:B(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=n),g}},r}function n(t,e,n,r,o,i,a){try{var c=t[i](a),l=c.value}catch(t){return void n(t)}c.done?e(l):Promise.resolve(l).then(r,o)}function r(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i,a,c=[],l=!0,u=!1;try{if(i=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=i.call(n)).done)&&(c.push(r.value),c.length!==e);l=!0);}catch(t){u=!0,o=t}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw o}}return c}}(t,e)||function(t,e){if(t){if("string"==typeof t)return o(t,e);var n={}.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?o(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}!function(){var t=GM_getValue("siteConfig",{"taobao.com":{itemSelector:"div#content_items_wrapper > div",nextPageSelector:"div#search-content-leftWrap > div:nth-of-type(3) > div:nth-of-type(4) > div > div > button:nth-of-type(2)",crawlInterval:3e3,fields:{title:"div#content_items_wrapper > div > a > div > div > div:nth-of-type(2) > div > span",price:"div#content_items_wrapper > div > a > div > div > div:nth-of-type(4)  > div:nth-of-type(1)  > span:nth-of-type(1)",image:"div#content_items_wrapper > div > a > div > div > div:nth-of-type(1)  > img:nth-of-type(1)",店铺名称:"div#content_items_wrapper > div > a > div > div:last-child > div > a > div > span:last-child"}},"zhihu.com":{itemSelector:".QuestionItem",nextPageSelector:"",crawlInterval:3e3,fields:{title:".QuestionItem-title",content:".QuestionItem-content",answerCount:".QuestionItem-action"}}}),o=null,i="",a=[],c=!0,l={};function u(){c=!c,this.textContent="当前模式：".concat(c?"手动":"自动"),c?d():function(){return p.apply(this,arguments)}().then((function(){!function(){l={globalOp:"AND",fields:{}},Object.keys(o.fields).forEach((function(t){l.fields[t]={op:"AND",conditions:[]}}));var t=document.createElement("div");t.className="config-modal",t.style.width="600px",t.style.zIndex=9999999999,t.innerHTML='\n            <h3>设置过滤条件</h3>\n            <div>\n                <label>全局条件组合: </label>\n                <select id="global-combine">\n                    <option value="AND">AND</option>\n                    <option value="OR">OR</option>\n                </select>\n            </div>\n            <div id="filterFieldsContainer">\n                '.concat(Object.keys(o.fields).map((function(t){return'\n                    <div style="border:1px solid #ccc; margin:10px 0; padding:5px;">\n                        <h4>字段：'.concat(t,'</h4>\n                        <div>\n                            <label>条件组合: </label>\n                            <select class="field-combine" data-field="').concat(t,'">\n                                <option value="AND">AND</option>\n                                <option value="OR">OR</option>\n                            </select>\n                        </div>\n                        <div class="conditions-container" data-field="').concat(t,'">\n                            \x3c!-- 条件行将在此添加 --\x3e\n                        </div>\n                        <button class="add-condition" data-field="').concat(t,'">添加条件</button>\n                    </div>\n                ')})).join(""),'\n            </div>\n            <br>\n            <button id="confirmFilter">确认过滤</button>\n            <button id="cancelFilter">取消</button>\n        '),document.body.appendChild(t),t.querySelectorAll(".add-condition").forEach((function(e){e.addEventListener("click",(function(e){var n=e.target.getAttribute("data-field"),r=t.querySelector('.conditions-container[data-field="'.concat(n,'"]')),o=document.createElement("div");o.className="condition-row",o.innerHTML='\n                    <select class="condition-operator">\n                        <option value="contains">包含</option>\n                        <option value="not_contains">不包含</option>\n                        <option value="lt">小于</option>\n                        <option value="gt">大于</option>\n                        <option value="eq">等于</option>\n                    </select>\n                    <input type="text" class="condition-value" placeholder="条件值">\n                    <button class="remove-condition">删除</button>\n                ',r.appendChild(o),o.querySelector(".remove-condition").addEventListener("click",(function(){o.remove()}))}))})),document.getElementById("confirmFilter").addEventListener("click",(function(){l.globalOp=document.getElementById("global-combine").value,t.querySelectorAll(".field-combine").forEach((function(t){var e=t.getAttribute("data-field");l.fields[e].op=t.value})),t.querySelectorAll(".conditions-container").forEach((function(t){var e=t.getAttribute("data-field"),n=[];t.querySelectorAll(".condition-row").forEach((function(t){var e=t.querySelector(".condition-operator").value,r=t.querySelector(".condition-value").value.trim();r&&n.push({operator:e,value:r})})),l.fields[e].conditions=n}));var e,n=(e=l,a.filter((function(t){var n=Object.keys(e.fields).map((function(n){var r=e.fields[n],o=r.op,i=r.conditions;if(!i.length)return!0;var a=t[n]||"",c=i.map((function(t){var e=t.operator,n=t.value;switch(e){case"contains":return a.includes(n);case"not_contains":return!a.includes(n);case"lt":return parseFloat(a)<parseFloat(n);case"gt":return parseFloat(a)>parseFloat(n);case"eq":return a===n;default:return!1}}));return"AND"===o?c.every((function(t){return!0===t})):c.some((function(t){return!0===t}))}));return"AND"===e.globalOp?n.every((function(t){return!0===t})):n.some((function(t){return!0===t}))})));t.remove(),h(n)})),document.getElementById("cancelFilter").addEventListener("click",(function(){t.remove(),h()}))}()}))}function d(){s(),new MutationObserver((function(){return s()})).observe(document.body,{childList:!0,subtree:!0})}function s(){document.querySelectorAll(o.itemSelector).forEach((function(t){if(!t.querySelector(".crawler-checkbox")){var e=document.createElement("input");e.type="checkbox",e.className="crawler-checkbox",e.style.position="absolute",e.style.right="5px",e.style.top="5px",e.style.zIndex=99999,e.addEventListener("change",(function(e){var n=f(t);e.target.checked?a.push(n):a=a.filter((function(t){return t.id!==n.id})),document.getElementById("exportData").textContent="导出数据 (".concat(a.length,")")})),t.style.position="relative",t.prepend(e)}}))}function f(t){var e=t.getAttribute("data-crawler-id");e||(e=Math.random().toString(36).substr(2,9),t.setAttribute("data-crawler-id",e));for(var n={id:e},i=0,a=Object.entries(o.fields);i<a.length;i++){var c=r(a[i],2),l=c[0],u=c[1],d=t.querySelector(u);d?u.includes("img")&&d.src?n[l]=d.src:n[l]=d.textContent.trim():n[l]=""}return n}function p(){var t;return t=e().mark((function t(){var n;return e().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:a=[];case 1:return document.querySelectorAll(o.itemSelector).forEach((function(t){var e=f(t);a.some((function(t){return t.id===e.id}))||a.push(e)})),(n=document.querySelector(o.nextPageSelector)).scrollIntoView({behavior:"smooth",block:"center"}),t.next=7,v();case 7:if(!n){t.next=19;break}if(n.disabled||n.classList.contains("disabled")||"true"===n.getAttribute("aria-disabled")){t.next=16;break}return n.click(),n.scrollIntoView({behavior:"smooth",block:"center"}),t.next=14,v();case 14:t.next=17;break;case 16:return t.abrupt("break",22);case 17:t.next=20;break;case 19:return t.abrupt("break",22);case 20:t.next=1;break;case 22:case"end":return t.stop()}}),t)})),p=function(){var e=this,r=arguments;return new Promise((function(o,i){var a=t.apply(e,r);function c(t){n(a,o,i,c,l,"next",t)}function l(t){n(a,o,i,c,l,"throw",t)}c(void 0)}))},p.apply(this,arguments)}function v(){var t=o.crawlInterval||2e3;return new Promise((function(e){return setTimeout(e,t)}))}function h(){var t=c?a:arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(t){var e=document.createElement("div");e.className="config-modal",e.style.zIndex=9999999999,e.innerHTML="\n            <div>\n                <h3>预览数据（共 ".concat(t.length,' 条）</h3>\n                <div style="max-height:300px; overflow:auto;">\n                    <table border="1" style="border-collapse: collapse; width:100%;">\n                        <thead>\n                            <tr>').concat(Object.keys(t[0]||{}).map((function(t){return'<th style="padding:5px;">'.concat(t,"</th>")})).join(""),"</tr>\n                        </thead>\n                        <tbody>\n                            ").concat(t.map((function(t){return"<tr>".concat(Object.keys(t).map((function(e){return'<td style="padding:5px;">'.concat(t[e],"</td>")})).join(""),"</tr>")})).join(""),'\n                        </tbody>\n                    </table>\n                </div>\n                <br>\n                <button id="confirmExport">确认导出Excel</button>\n                <button id="closePreview">关闭</button>\n            </div>\n        '),document.body.appendChild(e),document.getElementById("confirmExport").addEventListener("click",(function(){var n,r,o;n=t,r=XLSX.utils.json_to_sheet(n),o=XLSX.utils.book_new(),XLSX.utils.book_append_sheet(o,r,"Data"),XLSX.writeFile(o,"crawler_data_".concat((new Date).toISOString().slice(0,10),".xlsx")),e.remove()})),document.getElementById("closePreview").addEventListener("click",(function(){e.remove()}))}}function m(){var e=document.createElement("div");e.className="config-modal",e.style.width="600px",e.style.zIndex=9999999999,e.innerHTML="\n        <h3>配置当前站点 (".concat(i,')</h3>\n        <div>\n            <label>列表项选择器: </label>\n            <input type="text" id="config_itemSelector" value="').concat(o.itemSelector,'" style="width:80%;"/>\n            <button id="select_itemSelector">选择元素</button>\n        </div>\n        <div>\n            <label>下一页选择器: </label>\n            <input type="text" id="config_nextPageSelector" value="').concat(o.nextPageSelector,'" style="width:80%;"/>\n            <button id="select_nextPageSelector">选择元素</button>\n        </div>\n        <div>\n            <label>每页爬取间隔（毫秒）: </label>\n            <input type="number" id="config_crawlInterval" value="').concat(o.crawlInterval||2e3,'" style="width:80%;"/>\n        </div>\n        <div id="fieldsContainer">\n            <h4>字段配置</h4>\n            <div id="fieldsList">\n                ').concat(Object.entries(o.fields).map((function(t){var e=r(t,2),n=e[0],o=e[1];return'\n                    <div class="field-row">\n                        <input type="text" class="config_field_key" value="'.concat(n,'" style="width:20%;" />\n                        <input type="text" class="config_field_value" value="').concat(o,'" style="width:50%;" />\n                        <button class="select_field">选择元素</button>\n                        <button class="delete_field">删除</button>\n                    </div>\n                ')})).join(""),'\n            </div>\n            <button id="addField">添加字段</button>\n        </div>\n        <button id="saveConfig">保存配置</button>\n        <button id="closeConfig">取消</button>\n    '),document.body.appendChild(e),document.getElementById("saveConfig").addEventListener("click",(function(){o.itemSelector=document.getElementById("config_itemSelector").value.trim(),o.nextPageSelector=document.getElementById("config_nextPageSelector").value.trim(),o.crawlInterval=parseInt(document.getElementById("config_crawlInterval").value.trim(),10)||2e3;var n={};document.querySelectorAll("#fieldsList .field-row").forEach((function(t){var e=t.querySelector(".config_field_key").value.trim(),r=t.querySelector(".config_field_value").value.trim();e&&(n[e]=r)})),o.fields=n,t[i]=o,GM_setValue("siteConfig",t),alert("配置已保存！"),e.remove()})),document.getElementById("closeConfig").addEventListener("click",(function(){e.remove()}))}function y(){var e=document.createElement("div");e.className="config-modal",e.style.width="500px",e.style.zIndex=9999999999,e.innerHTML='\n            <h3>导出配置</h3>\n            <textarea id="exportConfigText" style="width:100%;height:200px;">'.concat(JSON.stringify(t,null,2),'</textarea>\n            <br>\n            <button id="closeExportConfig">关闭</button>\n        '),document.body.appendChild(e),document.getElementById("closeExportConfig").addEventListener("click",(function(){e.remove()}))}function g(){var e=document.createElement("div");e.className="config-modal",e.style.width="500px",e.style.zIndex=9999999999,e.innerHTML='\n            <h3>导入配置</h3>\n            <textarea id="importConfigText" placeholder="粘贴配置JSON" style="width:100%;height:200px;"></textarea>\n            <br>\n            <button id="doImportConfig">导入</button>\n            <button id="closeImportConfig">关闭</button>\n        ',document.body.appendChild(e),document.getElementById("doImportConfig").addEventListener("click",(function(){try{var n=JSON.parse(document.getElementById("importConfigText").value);t=n,GM_setValue("siteConfig",t),alert("配置已导入！"),e.remove()}catch(t){alert("导入失败，请检查JSON格式。")}})),document.getElementById("closeImportConfig").addEventListener("click",(function(){e.remove()}))}setTimeout((function(){var e;GM_addStyle("\n            .crawler-checkbox { transform: scale(1.2); cursor: pointer; }\n            table td, table th { max-width: 300px; overflow: hidden; }\n            .config-modal { position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%);\n                background: white; padding: 20px; z-index: 10000; box-shadow: 0 0 10px rgba(0,0,0,0.3); }\n            .config-modal input, .config-modal textarea, .config-modal select { margin: 5px 0; }\n            .field-row { margin-bottom: 5px; }\n        "),function(){var e=location.hostname;for(var n in t)if(e.includes(n)){i=n,o=t[n];break}}(),o?((e=document.createElement("div")).style="position: fixed; top: 20px; right: 20px; z-index: 9999;\n                      background: white; padding: 10px; border: 1px solid #ccc;",e.innerHTML='\n            <div>\n                <button id="toggleMode">当前模式：'.concat(c?"手动":"自动",'</button>\n                <button id="exportData">导出数据 (').concat(a.length,')</button>\n                <button id="configSite">配置 siteConfig</button>\n                <button id="exportConfig">导出配置</button>\n                <button id="importConfig">导入配置</button>\n            </div>\n        '),document.body.appendChild(e),document.getElementById("toggleMode").addEventListener("click",u),document.getElementById("exportData").addEventListener("click",h),document.getElementById("configSite").addEventListener("click",m),document.getElementById("exportConfig").addEventListener("click",y),document.getElementById("importConfig").addEventListener("click",g),c&&d()):console.error("当前站点没有配置，请在配置面板中添加配置！")}),2e3)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LFNBQVNvQixlQUFlLG9CQUFvQmxKLE9BQ3pFd0csRUFBYWtJLEVBQ2JOLFlBQVksYUFBYzVILEdBQzFCNkgsTUFBTSxVQUNOeEcsRUFBTW9CLFFBQ1YsQ0FBRSxNQUFPMUosR0FDTDhPLE1BQU0sa0JBQ1YsQ0FDSixJQUNBdkcsU0FBU29CLGVBQWUscUJBQXFCUCxpQkFBaUIsU0FBUyxXQUNuRWQsRUFBTW9CLFFBQ1YsR0FDSixDQXNOQStELFlBcEJBLFdBaGZBLElBQ1U0QixFQWdmTkMsWUFBWSxtZ0JBN2ZoQixXQUNJLElBQU1DLEVBQU9DLFNBQVNDLFNBQ3RCLElBQUssSUFBTUMsS0FBVXpJLEVBQ2pCLEdBQUlzSSxFQUFLOUUsU0FBU2lGLEdBQVMsQ0FDdkJ0SSxFQUFnQnNJLEVBQ2hCdkksRUFBZ0JGLEVBQVd5SSxHQUMzQixLQUNKLENBRVIsQ0E0ZklDLEdBQ0l4SSxJQXpmRWtJLEVBQVE5RyxTQUFTQyxjQUFjLFFBQy9CRSxNQUFRLDJJQUdkMkcsRUFBTXhHLFVBQVkscUVBQUhsQixPQUV3QkwsRUFBYSxLQUFPLEtBQUksNkRBQUFLLE9BQ3ZCTixFQUFjdkMsT0FBTSw4TkFNNUR5RCxTQUFTUyxLQUFLQyxZQUFZb0csR0FDMUI5RyxTQUFTb0IsZUFBZSxjQUFjUCxpQkFBaUIsUUFBUzVCLEdBQ2hFZSxTQUFTb0IsZUFBZSxjQUFjUCxpQkFBaUIsUUFBU3lCLEdBQ2hFdEMsU0FBU29CLGVBQWUsY0FBY1AsaUJBQWlCLFFBQVNvRixHQUNoRWpHLFNBQVNvQixlQUFlLGdCQUFnQlAsaUJBQWlCLFFBQVMyRixHQUNsRXhHLFNBQVNvQixlQUFlLGdCQUFnQlAsaUJBQWlCLFFBQVM4RixHQXllMUQ1SCxHQUNBTSxLQUdKZ0ksUUFBUUMsTUFBTSx3QkFFdEIsR0FFaUIsSUFDcEIsQ0E5akJEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8veW91aG91X3NjcmlwdC8uL3NyYy9wcHBjY2MvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8g5byV5YWl5rK554y05YWD5pWw5o2u5paH5Lu2XHJcbmltcG9ydCAnLi9pbmRleC5tZXRhLmpzJztcclxuXHJcbihmdW5jdGlvbigpIHtcclxuICAgICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgICAvKioqKioqKioqKioqKioqKiog6buY6K6k6YWN572u5Y+K5oyB5LmF5YyW5a2Y5YKoICoqKioqKioqKioqKioqKioqL1xyXG4gICAgY29uc3QgZGVmYXVsdFNpdGVDb25maWcgPSB7XHJcbiAgICAgICAgXCJ0YW9iYW8uY29tXCI6IHtcclxuICAgICAgICAgICAgXCJpdGVtU2VsZWN0b3JcIjogXCJkaXYjY29udGVudF9pdGVtc193cmFwcGVyID4gZGl2XCIsXHJcbiAgICAgICAgICAgIFwibmV4dFBhZ2VTZWxlY3RvclwiOiBcImRpdiNzZWFyY2gtY29udGVudC1sZWZ0V3JhcCA+IGRpdjpudGgtb2YtdHlwZSgzKSA+IGRpdjpudGgtb2YtdHlwZSg0KSA+IGRpdiA+IGRpdiA+IGJ1dHRvbjpudGgtb2YtdHlwZSgyKVwiLFxyXG4gICAgICAgICAgICBcImNyYXdsSW50ZXJ2YWxcIjogMzAwMCwgLy8g5q+P6aG16Ze06ZqU5pe26Ze077yM5Y2V5L2N5q+r56eSXHJcbiAgICAgICAgICAgIFwiZmllbGRzXCI6IHtcclxuICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCJkaXYjY29udGVudF9pdGVtc193cmFwcGVyID4gZGl2ID4gYSA+IGRpdiA+IGRpdiA+IGRpdjpudGgtb2YtdHlwZSgyKSA+IGRpdiA+IHNwYW5cIixcclxuICAgICAgICAgICAgICAgIFwicHJpY2VcIjogXCJkaXYjY29udGVudF9pdGVtc193cmFwcGVyID4gZGl2ID4gYSA+IGRpdiA+IGRpdiA+IGRpdjpudGgtb2YtdHlwZSg0KSAgPiBkaXY6bnRoLW9mLXR5cGUoMSkgID4gc3BhbjpudGgtb2YtdHlwZSgxKVwiLFxyXG4gICAgICAgICAgICAgICAgXCJpbWFnZVwiOiBcImRpdiNjb250ZW50X2l0ZW1zX3dyYXBwZXIgPiBkaXYgPiBhID4gZGl2ID4gZGl2ID4gZGl2Om50aC1vZi10eXBlKDEpICA+IGltZzpudGgtb2YtdHlwZSgxKVwiLFxyXG4gICAgICAgICAgICAgICAgXCLlupfpk7rlkI3np7BcIjogXCJkaXYjY29udGVudF9pdGVtc193cmFwcGVyID4gZGl2ID4gYSA+IGRpdiA+IGRpdjpsYXN0LWNoaWxkID4gZGl2ID4gYSA+IGRpdiA+IHNwYW46bGFzdC1jaGlsZFwiXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIFwiemhpaHUuY29tXCI6IHtcclxuICAgICAgICAgICAgXCJpdGVtU2VsZWN0b3JcIjogXCIuUXVlc3Rpb25JdGVtXCIsXHJcbiAgICAgICAgICAgIFwibmV4dFBhZ2VTZWxlY3RvclwiOiBcIlwiLFxyXG4gICAgICAgICAgICBcImNyYXdsSW50ZXJ2YWxcIjogMzAwMCwgLy8g5q+P6aG16Ze06ZqU5pe26Ze077yM5Y2V5L2N5q+r56eSXHJcbiAgICAgICAgICAgIFwiZmllbGRzXCI6IHtcclxuICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIuUXVlc3Rpb25JdGVtLXRpdGxlXCIsXHJcbiAgICAgICAgICAgICAgICBcImNvbnRlbnRcIjogXCIuUXVlc3Rpb25JdGVtLWNvbnRlbnRcIixcclxuICAgICAgICAgICAgICAgIFwiYW5zd2VyQ291bnRcIjogXCIuUXVlc3Rpb25JdGVtLWFjdGlvblwiXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLy8g5Yqg6L295oyB5LmF5YyW6YWN572uXHJcbiAgICBsZXQgc2l0ZUNvbmZpZyA9IEdNX2dldFZhbHVlKCdzaXRlQ29uZmlnJywgZGVmYXVsdFNpdGVDb25maWcpO1xyXG5cclxuICAgIGxldCBjdXJyZW50Q29uZmlnID0gbnVsbDtcclxuICAgIGxldCBjdXJyZW50RG9tYWluID0gJyc7XHJcbiAgICBsZXQgY29sbGVjdGVkRGF0YSA9IFtdO1xyXG4gICAgbGV0IG1hbnVhbE1vZGUgPSB0cnVlO1xyXG4gICAgLy8g55So5LqO6L+H5ruk5p2h5Lu26YWN572u77yM57uT5p6E56S65L6L77yaXHJcbiAgICAvLyB7XHJcbiAgICAvLyAgIGdsb2JhbE9wOiBcIkFORFwiLFxyXG4gICAgLy8gICBmaWVsZHM6IHtcclxuICAgIC8vICAgICB0aXRsZTogeyBvcDogXCJBTkRcIiwgY29uZGl0aW9uczogWyB7IG9wZXJhdG9yOiBcImNvbnRhaW5zXCIsIHZhbHVlOiBcIuWwj+exs1wiIH0sIHsgb3BlcmF0b3I6IFwibm90X2NvbnRhaW5zXCIsIHZhbHVlOiBcIuiBlOaDs1wiIH0gXSB9LFxyXG4gICAgLy8gICAgIHByaWNlOiB7IG9wOiBcIk9SXCIsIGNvbmRpdGlvbnM6IFsgeyBvcGVyYXRvcjogXCJsdFwiLCB2YWx1ZTogXCIxMDAwXCIgfSwgeyBvcGVyYXRvcjogXCJndFwiLCB2YWx1ZTogXCI1MDAwXCIgfSBdIH1cclxuICAgIC8vICAgfVxyXG4gICAgLy8gfVxyXG4gICAgbGV0IGZpbHRlckNvbmZpZyA9IHt9O1xyXG5cclxuICAgIC8vIOagueaNruW9k+WJjeWfn+WQjeiOt+WPluWvueW6lOmFjee9rlxyXG4gICAgZnVuY3Rpb24gaW5pdENvbmZpZygpIHtcclxuICAgICAgICBjb25zdCBob3N0ID0gbG9jYXRpb24uaG9zdG5hbWU7XHJcbiAgICAgICAgZm9yIChjb25zdCBkb21haW4gaW4gc2l0ZUNvbmZpZykge1xyXG4gICAgICAgICAgICBpZiAoaG9zdC5pbmNsdWRlcyhkb21haW4pKSB7XHJcbiAgICAgICAgICAgICAgICBjdXJyZW50RG9tYWluID0gZG9tYWluO1xyXG4gICAgICAgICAgICAgICAgY3VycmVudENvbmZpZyA9IHNpdGVDb25maWdbZG9tYWluXTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKioqKioqKioqKioqKioqKiDmjqfliLbpnaLmnb8gKioqKioqKioqKioqKioqKiovXHJcbiAgICBmdW5jdGlvbiBhZGRDb250cm9sUGFuZWwoKSB7XHJcbiAgICAgICAgY29uc3QgcGFuZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBwYW5lbC5zdHlsZSA9IGBwb3NpdGlvbjogZml4ZWQ7IHRvcDogMjBweDsgcmlnaHQ6IDIwcHg7IHotaW5kZXg6IDk5OTk7XHJcbiAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTsgcGFkZGluZzogMTBweDsgYm9yZGVyOiAxcHggc29saWQgI2NjYztgO1xyXG5cclxuICAgICAgICBwYW5lbC5pbm5lckhUTUwgPSBgXHJcbiAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIGlkPVwidG9nZ2xlTW9kZVwiPuW9k+WJjeaooeW8j++8miR7bWFudWFsTW9kZSA/ICfmiYvliqgnIDogJ+iHquWKqCd9PC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIGlkPVwiZXhwb3J0RGF0YVwiPuWvvOWHuuaVsOaNriAoJHtjb2xsZWN0ZWREYXRhLmxlbmd0aH0pPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIGlkPVwiY29uZmlnU2l0ZVwiPumFjee9riBzaXRlQ29uZmlnPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIGlkPVwiZXhwb3J0Q29uZmlnXCI+5a+85Ye66YWN572uPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIGlkPVwiaW1wb3J0Q29uZmlnXCI+5a+85YWl6YWN572uPC9idXR0b24+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIGA7XHJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChwYW5lbCk7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RvZ2dsZU1vZGUnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRvZ2dsZU1vZGUpO1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdleHBvcnREYXRhJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBzaG93UHJldmlldyk7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbmZpZ1NpdGUnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9wZW5Db25maWdQYW5lbCk7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2V4cG9ydENvbmZpZycpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgb3BlbkV4cG9ydENvbmZpZ01vZGFsKTtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW1wb3J0Q29uZmlnJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvcGVuSW1wb3J0Q29uZmlnTW9kYWwpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIOWIh+aNouaooeW8j++8muaJi+WKqC/oh6rliqhcclxuICAgIGZ1bmN0aW9uIHRvZ2dsZU1vZGUoKSB7XHJcbiAgICAgICAgbWFudWFsTW9kZSA9ICFtYW51YWxNb2RlO1xyXG4gICAgICAgIHRoaXMudGV4dENvbnRlbnQgPSBg5b2T5YmN5qih5byP77yaJHttYW51YWxNb2RlID8gJ+aJi+WKqCcgOiAn6Ieq5YqoJ31gO1xyXG4gICAgICAgIGlmIChtYW51YWxNb2RlKSB7XHJcbiAgICAgICAgICAgIGluaXRNYW51YWxNb2RlKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgLy8g6Ieq5Yqo5qih5byP77ya5byA5aeL6YeH6ZuG5ZCO77yM5a6M5oiQ5ZCO5by55Ye66L+H5ruk5p2h5Lu25a+56K+d5qGGXHJcbiAgICAgICAgICAgIHN0YXJ0QXV0b0NyYXdsKCkudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBvcGVuRmlsdGVyTW9kYWwoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKioqKioqKioqKioqKioqKiDmlbDmja7ph4fpm4YgKioqKioqKioqKioqKioqKiovXHJcbiAgICAvLyDmiYvliqjmqKHlvI/vvJrkuLrmr4/kuKrliJfooajpobnmt7vliqDlpI3pgInmoYZcclxuICAgIGZ1bmN0aW9uIGluaXRNYW51YWxNb2RlKCkge1xyXG4gICAgICAgIGFkZENoZWNrYm94ZXMoKTtcclxuICAgICAgICBvYnNlcnZlRE9NQ2hhbmdlcygpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIOS4uuavj+S4quWIl+ihqOmhuea3u+WKoOWkjemAieahhu+8iOmYsumHjeWkjea3u+WKoO+8iVxyXG4gICAgZnVuY3Rpb24gYWRkQ2hlY2tib3hlcygpIHtcclxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGN1cnJlbnRDb25maWcuaXRlbVNlbGVjdG9yKS5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgICAgICAgICBpZiAoIWl0ZW0ucXVlcnlTZWxlY3RvcignLmNyYXdsZXItY2hlY2tib3gnKSkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgY2hlY2tib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xyXG4gICAgICAgICAgICAgICAgY2hlY2tib3gudHlwZSA9ICdjaGVja2JveCc7XHJcbiAgICAgICAgICAgICAgICBjaGVja2JveC5jbGFzc05hbWUgPSAnY3Jhd2xlci1jaGVja2JveCc7XHJcbiAgICAgICAgICAgICAgICBjaGVja2JveC5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XHJcbiAgICAgICAgICAgICAgICBjaGVja2JveC5zdHlsZS5yaWdodCA9ICc1cHgnO1xyXG4gICAgICAgICAgICAgICAgY2hlY2tib3guc3R5bGUudG9wID0gJzVweCc7XHJcbiAgICAgICAgICAgICAgICBjaGVja2JveC5zdHlsZS56SW5kZXggPSA5OTk5OTtcclxuICAgICAgICAgICAgICAgIGNoZWNrYm94LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGUgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBleHRyYWN0SXRlbURhdGEoaXRlbSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGUudGFyZ2V0LmNoZWNrZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29sbGVjdGVkRGF0YS5wdXNoKGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxlY3RlZERhdGEgPSBjb2xsZWN0ZWREYXRhLmZpbHRlcihkID0+IGQuaWQgIT09IGRhdGEuaWQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZXhwb3J0RGF0YScpLnRleHRDb250ZW50ID1cclxuICAgICAgICAgICAgICAgICAgICAgICAgYOWvvOWHuuaVsOaNriAoJHtjb2xsZWN0ZWREYXRhLmxlbmd0aH0pYDtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgaXRlbS5zdHlsZS5wb3NpdGlvbiA9ICdyZWxhdGl2ZSc7XHJcbiAgICAgICAgICAgICAgICBpdGVtLnByZXBlbmQoY2hlY2tib3gpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8g5qC55o2uIGN1cnJlbnRDb25maWcuZmllbGRzIOaPkOWPluWIl+ihqOmhueaVsOaNrlxyXG4gICAgZnVuY3Rpb24gZXh0cmFjdEl0ZW1EYXRhKGl0ZW0pIHtcclxuICAgICAgICAvLyDlsJ3or5Xku44gRE9NIOS4iuiOt+WPluW3suacieeahCBpZO+8jOWQpuWImeeUn+aIkOS4gOS4quaWsOeahOW5tuS/neWtmOWIsOWFg+e0oOWxnuaAp+S4rVxyXG4gICAgICAgIGxldCBpZCA9IGl0ZW0uZ2V0QXR0cmlidXRlKCdkYXRhLWNyYXdsZXItaWQnKTtcclxuICAgICAgICBpZiAoIWlkKSB7XHJcbiAgICAgICAgICAgIGlkID0gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDkpO1xyXG4gICAgICAgICAgICBpdGVtLnNldEF0dHJpYnV0ZSgnZGF0YS1jcmF3bGVyLWlkJywgaWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBkYXRhID0geyBpZDogaWQgfTtcclxuICAgICAgICBmb3IgKGNvbnN0IFtmaWVsZCwgc2VsZWN0b3JdIG9mIE9iamVjdC5lbnRyaWVzKGN1cnJlbnRDb25maWcuZmllbGRzKSkge1xyXG4gICAgICAgICAgICBjb25zdCBlbCA9IGl0ZW0ucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XHJcbiAgICAgICAgICAgIGlmIChlbCkge1xyXG4gICAgICAgICAgICAgICAgLy8g6Iul5Li65Zu+54mH5YiZ5Y+WIHNyYyDlsZ7mgKfvvIzlkKbliJnlj5bmlofmnKxcclxuICAgICAgICAgICAgICAgIGlmIChzZWxlY3Rvci5pbmNsdWRlcygnaW1nJykgJiYgZWwuc3JjKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YVtmaWVsZF0gPSBlbC5zcmM7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGFbZmllbGRdID0gZWwudGV4dENvbnRlbnQudHJpbSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgZGF0YVtmaWVsZF0gPSAnJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZGF0YTtcclxuICAgIH1cclxuXHJcbiAgIGFzeW5jIGZ1bmN0aW9uIHN0YXJ0QXV0b0NyYXdsKCkge1xyXG4gICAgLy8g5riF56m65LiK5qyh5pWw5o2uXHJcbiAgICBjb2xsZWN0ZWREYXRhID0gW107XHJcbiAgICB3aGlsZSAodHJ1ZSkge1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoY3VycmVudENvbmZpZy5pdGVtU2VsZWN0b3IpLmZvckVhY2goaXRlbSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBleHRyYWN0SXRlbURhdGEoaXRlbSk7XHJcbiAgICAgICAgICAgIGlmICghY29sbGVjdGVkRGF0YS5zb21lKGQgPT4gZC5pZCA9PT0gZGF0YS5pZCkpIHtcclxuICAgICAgICAgICAgICAgIGNvbGxlY3RlZERhdGEucHVzaChkYXRhKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGNvbnN0IG5leHRQYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihjdXJyZW50Q29uZmlnLm5leHRQYWdlU2VsZWN0b3IpO1xyXG4gICAgICAgIC8vIOeCueWHu+S4i+S4gOmhteWQjuWFiOa7muWKqOWIsOmhtemdouW6lemDqO+8jOehruS/neaHkuWKoOi9veWGheWuueWKoOi9vVxyXG4gICAgICAgIG5leHRQYWdlLnNjcm9sbEludG9WaWV3KHsgYmVoYXZpb3I6ICdzbW9vdGgnLCBibG9jazogJ2NlbnRlcicgfSk7XHJcbiAgICAgICAgLy8g562J5b6F5q+P6aG16Ze06ZqU5pe26Ze077yM5L2/55So6YWN572u5Lit55qEIGNyYXdsSW50ZXJ2YWxcclxuICAgICAgICBhd2FpdCB3YWl0Rm9yUGFnZUxvYWQoKTtcclxuICAgICAgICBpZiAobmV4dFBhZ2UpIHtcclxuICAgICAgICAgICAgY29uc3QgaXNEaXNhYmxlZCA9IG5leHRQYWdlLmRpc2FibGVkIHx8XHJcbiAgICAgICAgICAgICAgICBuZXh0UGFnZS5jbGFzc0xpc3QuY29udGFpbnMoJ2Rpc2FibGVkJykgfHxcclxuICAgICAgICAgICAgICAgIG5leHRQYWdlLmdldEF0dHJpYnV0ZSgnYXJpYS1kaXNhYmxlZCcpID09PSAndHJ1ZSc7XHJcblxyXG4gICAgICAgICAgICBpZiAoIWlzRGlzYWJsZWQpIHtcclxuICAgICAgICAgICAgICAgIG5leHRQYWdlLmNsaWNrKCk7XHJcbiAgICAgICAgICAgICAgICAvLyDngrnlh7vkuIvkuIDpobXlkI7lhYjmu5rliqjliLDpobXpnaLlupXpg6jvvIznoa7kv53mh5LliqDovb3lhoXlrrnliqDovb1cclxuICAgICAgICAgICAgICAgIG5leHRQYWdlLnNjcm9sbEludG9WaWV3KHsgYmVoYXZpb3I6ICdzbW9vdGgnLCBibG9jazogJ2NlbnRlcicgfSk7XHJcbiAgICAgICAgICAgICAgICAvLyDnrYnlvoXmr4/pobXpl7TpmpTml7bpl7TvvIzkvb/nlKjphY3nva7kuK3nmoQgY3Jhd2xJbnRlcnZhbFxyXG4gICAgICAgICAgICAgICAgYXdhaXQgd2FpdEZvclBhZ2VMb2FkKCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgfVxyXG5cclxuICAgIC8vIOetieW+heWHveaVsO+8jOmXtOmalOaXtumXtOS9v+eUqOW9k+WJjemFjee9ruS4reeahCBjcmF3bEludGVydmFs77yI6Iul5pyq6K6+572u5YiZ6buY6K6kMjAwMOavq+enku+8iVxyXG4gICAgZnVuY3Rpb24gd2FpdEZvclBhZ2VMb2FkKCkge1xyXG4gICAgICAgIGNvbnN0IGludGVydmFsID0gY3VycmVudENvbmZpZy5jcmF3bEludGVydmFsIHx8IDIwMDA7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCBpbnRlcnZhbCkpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKioqKioqKioqKioqKioqKiDmlbDmja7pooTop4jkuI7lr7zlh7ogKioqKioqKioqKioqKioqKiovXHJcbiAgICAvLyDpooTop4jmlbDmja7vvIjmraTlpITkvb/nlKjov4fmu6TlkI7nmoTmlbDmja7vvIzlpoLmnpzov4fmu6TmnKrorr7nva7liJnkuLrlhajpg6jmlbDmja7vvIlcclxuICAgIGZ1bmN0aW9uIHNob3dQcmV2aWV3KGZpbHRlcmVkRGF0YSA9IG51bGwpIHtcclxuICAgICAgICBjb25zdCBkYXRhVG9TaG93ID0gbWFudWFsTW9kZSA/IGNvbGxlY3RlZERhdGEgOiBmaWx0ZXJlZERhdGE7XHJcbiAgICAgICAgaWYgKGRhdGFUb1Nob3cpIHtcclxuICAgICAgICAgICAgY29uc3QgbW9kYWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICAgICAgbW9kYWwuY2xhc3NOYW1lID0gJ2NvbmZpZy1tb2RhbCc7XHJcbiAgICAgICAgICAgIG1vZGFsLnN0eWxlLnpJbmRleCA9IDk5OTk5OTk5OTk7XHJcbiAgICAgICAgICAgIG1vZGFsLmlubmVySFRNTCA9IGBcclxuICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgIDxoMz7pooTop4jmlbDmja7vvIjlhbEgJHtkYXRhVG9TaG93Lmxlbmd0aH0g5p2h77yJPC9oMz5cclxuICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJtYXgtaGVpZ2h0OjMwMHB4OyBvdmVyZmxvdzphdXRvO1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9XCIxXCIgc3R5bGU9XCJib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB3aWR0aDoxMDAlO1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGhlYWQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+JHtPYmplY3Qua2V5cyhkYXRhVG9TaG93WzBdIHx8IHt9KS5tYXAoaCA9PiBgPHRoIHN0eWxlPVwicGFkZGluZzo1cHg7XCI+JHtofTwvdGg+YCkuam9pbignJyl9PC90cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC90aGVhZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJHtkYXRhVG9TaG93Lm1hcChpdGVtID0+IGA8dHI+JHtPYmplY3Qua2V5cyhpdGVtKS5tYXAoa2V5ID0+IGA8dGQgc3R5bGU9XCJwYWRkaW5nOjVweDtcIj4ke2l0ZW1ba2V5XX08L3RkPmApLmpvaW4oJycpfTwvdHI+YCkuam9pbignJyl9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XHJcbiAgICAgICAgICAgICAgICAgICAgPC90YWJsZT5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGJyPlxyXG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBpZD1cImNvbmZpcm1FeHBvcnRcIj7noa7orqTlr7zlh7pFeGNlbDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBpZD1cImNsb3NlUHJldmlld1wiPuWFs+mXrTwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICBgO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG1vZGFsKTtcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbmZpcm1FeHBvcnQnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGV4cG9ydFRvRXhjZWwoZGF0YVRvU2hvdyk7XHJcbiAgICAgICAgICAgICAgICBtb2RhbC5yZW1vdmUoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjbG9zZVByZXZpZXcnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIG1vZGFsLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8g5Yip55SoIFNoZWV0SlMg5a+85Ye6IEV4Y2VsIOaWh+S7tlxyXG4gICAgZnVuY3Rpb24gZXhwb3J0VG9FeGNlbChkYXRhVG9FeHBvcnQpIHtcclxuICAgICAgICBjb25zdCB3cyA9IFhMU1gudXRpbHMuanNvbl90b19zaGVldChkYXRhVG9FeHBvcnQpO1xyXG4gICAgICAgIGNvbnN0IHdiID0gWExTWC51dGlscy5ib29rX25ldygpO1xyXG4gICAgICAgIFhMU1gudXRpbHMuYm9va19hcHBlbmRfc2hlZXQod2IsIHdzLCBcIkRhdGFcIik7XHJcbiAgICAgICAgWExTWC53cml0ZUZpbGUod2IsIGBjcmF3bGVyX2RhdGFfJHtuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkuc2xpY2UoMCwxMCl9Lnhsc3hgKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyDop4Llr58gRE9NIOWPmOWMlu+8jOiHquWKqOS4uuaWsOWinuWIl+ihqOmhuea3u+WKoOWkjemAieahhlxyXG4gICAgZnVuY3Rpb24gb2JzZXJ2ZURPTUNoYW5nZXMoKSB7XHJcbiAgICAgICAgY29uc3Qgb2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcigoKSA9PiBhZGRDaGVja2JveGVzKCkpO1xyXG4gICAgICAgIG9ic2VydmVyLm9ic2VydmUoZG9jdW1lbnQuYm9keSwgeyBjaGlsZExpc3Q6IHRydWUsIHN1YnRyZWU6IHRydWUgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqKioqKioqKioqKioqKioqIOmFjee9rumdouadv+WPiuWvvOWFpeWvvOWHuiAqKioqKioqKioqKioqKioqKi9cclxuICAgIC8vIOaJk+W8gCBzaXRlQ29uZmlnIOmFjee9rumdouadv++8iOe8lui+keW9k+WJjeermeeCuemFjee9ru+8ie+8jOaUr+aMgeWtl+auteeahOaWsOWinuS4juWIoOmZpFxyXG4gICAgZnVuY3Rpb24gb3BlbkNvbmZpZ1BhbmVsKCkge1xyXG4gICAgICAgIGNvbnN0IG1vZGFsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgbW9kYWwuY2xhc3NOYW1lID0gJ2NvbmZpZy1tb2RhbCc7XHJcbiAgICAgICAgbW9kYWwuc3R5bGUud2lkdGggPSAnNjAwcHgnO1xyXG4gICAgICAgIG1vZGFsLnN0eWxlLnpJbmRleCA9IDk5OTk5OTk5OTk7XHJcbiAgICAgICAgbW9kYWwuaW5uZXJIVE1MID0gYFxyXG4gICAgICAgIDxoMz7phY3nva7lvZPliY3nq5nngrkgKCR7Y3VycmVudERvbWFpbn0pPC9oMz5cclxuICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICA8bGFiZWw+5YiX6KGo6aG56YCJ5oup5ZmoOiA8L2xhYmVsPlxyXG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBpZD1cImNvbmZpZ19pdGVtU2VsZWN0b3JcIiB2YWx1ZT1cIiR7Y3VycmVudENvbmZpZy5pdGVtU2VsZWN0b3J9XCIgc3R5bGU9XCJ3aWR0aDo4MCU7XCIvPlxyXG4gICAgICAgICAgICA8YnV0dG9uIGlkPVwic2VsZWN0X2l0ZW1TZWxlY3RvclwiPumAieaLqeWFg+e0oDwvYnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgIDxsYWJlbD7kuIvkuIDpobXpgInmi6nlmag6IDwvbGFiZWw+XHJcbiAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGlkPVwiY29uZmlnX25leHRQYWdlU2VsZWN0b3JcIiB2YWx1ZT1cIiR7Y3VycmVudENvbmZpZy5uZXh0UGFnZVNlbGVjdG9yfVwiIHN0eWxlPVwid2lkdGg6ODAlO1wiLz5cclxuICAgICAgICAgICAgPGJ1dHRvbiBpZD1cInNlbGVjdF9uZXh0UGFnZVNlbGVjdG9yXCI+6YCJ5oup5YWD57SgPC9idXR0b24+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgPGxhYmVsPuavj+mhteeIrOWPlumXtOmalO+8iOavq+enku+8iTogPC9sYWJlbD5cclxuICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJudW1iZXJcIiBpZD1cImNvbmZpZ19jcmF3bEludGVydmFsXCIgdmFsdWU9XCIke2N1cnJlbnRDb25maWcuY3Jhd2xJbnRlcnZhbCB8fCAyMDAwfVwiIHN0eWxlPVwid2lkdGg6ODAlO1wiLz5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGlkPVwiZmllbGRzQ29udGFpbmVyXCI+XHJcbiAgICAgICAgICAgIDxoND7lrZfmrrXphY3nva48L2g0PlxyXG4gICAgICAgICAgICA8ZGl2IGlkPVwiZmllbGRzTGlzdFwiPlxyXG4gICAgICAgICAgICAgICAgJHtPYmplY3QuZW50cmllcyhjdXJyZW50Q29uZmlnLmZpZWxkcykubWFwKChba2V5LCBzZWxlY3Rvcl0pID0+IGBcclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmllbGQtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGNsYXNzPVwiY29uZmlnX2ZpZWxkX2tleVwiIHZhbHVlPVwiJHtrZXl9XCIgc3R5bGU9XCJ3aWR0aDoyMCU7XCIgLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJjb25maWdfZmllbGRfdmFsdWVcIiB2YWx1ZT1cIiR7c2VsZWN0b3J9XCIgc3R5bGU9XCJ3aWR0aDo1MCU7XCIgLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cInNlbGVjdF9maWVsZFwiPumAieaLqeWFg+e0oDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiZGVsZXRlX2ZpZWxkXCI+5Yig6ZmkPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICBgKS5qb2luKCcnKX1cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxidXR0b24gaWQ9XCJhZGRGaWVsZFwiPua3u+WKoOWtl+autTwvYnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxidXR0b24gaWQ9XCJzYXZlQ29uZmlnXCI+5L+d5a2Y6YWN572uPC9idXR0b24+XHJcbiAgICAgICAgPGJ1dHRvbiBpZD1cImNsb3NlQ29uZmlnXCI+5Y+W5raIPC9idXR0b24+XHJcbiAgICBgO1xyXG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobW9kYWwpO1xyXG4gICAgICAgIC8vIOKApu+8iOWFtuS9mee7keWumuS6i+S7tueahOS7o+eggeS/neaMgeS4jeWPmO+8ieKAplxyXG5cclxuICAgICAgICAvLyDkv53lrZjphY3nva7ml7bvvIzlkIzml7bkv53lrZggY3Jhd2xJbnRlcnZhbFxyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzYXZlQ29uZmlnJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIGN1cnJlbnRDb25maWcuaXRlbVNlbGVjdG9yID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbmZpZ19pdGVtU2VsZWN0b3InKS52YWx1ZS50cmltKCk7XHJcbiAgICAgICAgICAgIGN1cnJlbnRDb25maWcubmV4dFBhZ2VTZWxlY3RvciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb25maWdfbmV4dFBhZ2VTZWxlY3RvcicpLnZhbHVlLnRyaW0oKTtcclxuICAgICAgICAgICAgY3VycmVudENvbmZpZy5jcmF3bEludGVydmFsID0gcGFyc2VJbnQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbmZpZ19jcmF3bEludGVydmFsJykudmFsdWUudHJpbSgpLCAxMCkgfHwgMjAwMDtcclxuICAgICAgICAgICAgLy8g6YeN5p6E5a2X5q615a+56LGh77ya6YGN5Y6G5omA5pyJIGZpZWxkLXJvd1xyXG4gICAgICAgICAgICBjb25zdCBuZXdGaWVsZHMgPSB7fTtcclxuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnI2ZpZWxkc0xpc3QgLmZpZWxkLXJvdycpLmZvckVhY2gocm93ID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGtleSA9IHJvdy5xdWVyeVNlbGVjdG9yKCcuY29uZmlnX2ZpZWxkX2tleScpLnZhbHVlLnRyaW0oKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gcm93LnF1ZXJ5U2VsZWN0b3IoJy5jb25maWdfZmllbGRfdmFsdWUnKS52YWx1ZS50cmltKCk7XHJcbiAgICAgICAgICAgICAgICBpZiAoa2V5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmV3RmllbGRzW2tleV0gPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGN1cnJlbnRDb25maWcuZmllbGRzID0gbmV3RmllbGRzO1xyXG4gICAgICAgICAgICBzaXRlQ29uZmlnW2N1cnJlbnREb21haW5dID0gY3VycmVudENvbmZpZztcclxuICAgICAgICAgICAgR01fc2V0VmFsdWUoJ3NpdGVDb25maWcnLCBzaXRlQ29uZmlnKTtcclxuICAgICAgICAgICAgYWxlcnQoJ+mFjee9ruW3suS/neWtmO+8gScpO1xyXG4gICAgICAgICAgICBtb2RhbC5yZW1vdmUoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2xvc2VDb25maWcnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgICAgbW9kYWwucmVtb3ZlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8vIOWvvOWHuumFjee9ru+8muW8ueWHuuWvueivneahhuaYvuekuiBKU09OIOWtl+espuS4su+8jOS+v+S6juWkjeWItuS/neWtmFxyXG4gICAgZnVuY3Rpb24gb3BlbkV4cG9ydENvbmZpZ01vZGFsKCkge1xyXG4gICAgICAgIGNvbnN0IG1vZGFsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgbW9kYWwuY2xhc3NOYW1lID0gJ2NvbmZpZy1tb2RhbCc7XHJcbiAgICAgICAgbW9kYWwuc3R5bGUud2lkdGggPSAnNTAwcHgnO1xyXG4gICAgICAgIG1vZGFsLnN0eWxlLnpJbmRleCA9IDk5OTk5OTk5OTk7XHJcbiAgICAgICAgbW9kYWwuaW5uZXJIVE1MID0gYFxyXG4gICAgICAgICAgICA8aDM+5a+85Ye66YWN572uPC9oMz5cclxuICAgICAgICAgICAgPHRleHRhcmVhIGlkPVwiZXhwb3J0Q29uZmlnVGV4dFwiIHN0eWxlPVwid2lkdGg6MTAwJTtoZWlnaHQ6MjAwcHg7XCI+JHtKU09OLnN0cmluZ2lmeShzaXRlQ29uZmlnLCBudWxsLCAyKX08L3RleHRhcmVhPlxyXG4gICAgICAgICAgICA8YnI+XHJcbiAgICAgICAgICAgIDxidXR0b24gaWQ9XCJjbG9zZUV4cG9ydENvbmZpZ1wiPuWFs+mXrTwvYnV0dG9uPlxyXG4gICAgICAgIGA7XHJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChtb2RhbCk7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nsb3NlRXhwb3J0Q29uZmlnJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIG1vZGFsLnJlbW92ZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIOWvvOWFpemFjee9ru+8muW8ueWHuuWvueivneahhui+k+WFpSBKU09O77yM5oiQ5Yqf5ZCO5pu05paw6YWN572uXHJcbiAgICBmdW5jdGlvbiBvcGVuSW1wb3J0Q29uZmlnTW9kYWwoKSB7XHJcbiAgICAgICAgY29uc3QgbW9kYWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBtb2RhbC5jbGFzc05hbWUgPSAnY29uZmlnLW1vZGFsJztcclxuICAgICAgICBtb2RhbC5zdHlsZS53aWR0aCA9ICc1MDBweCc7XHJcbiAgICAgICAgbW9kYWwuc3R5bGUuekluZGV4ID0gOTk5OTk5OTk5OTtcclxuICAgICAgICBtb2RhbC5pbm5lckhUTUwgPSBgXHJcbiAgICAgICAgICAgIDxoMz7lr7zlhaXphY3nva48L2gzPlxyXG4gICAgICAgICAgICA8dGV4dGFyZWEgaWQ9XCJpbXBvcnRDb25maWdUZXh0XCIgcGxhY2Vob2xkZXI9XCLnspjotLTphY3nva5KU09OXCIgc3R5bGU9XCJ3aWR0aDoxMDAlO2hlaWdodDoyMDBweDtcIj48L3RleHRhcmVhPlxyXG4gICAgICAgICAgICA8YnI+XHJcbiAgICAgICAgICAgIDxidXR0b24gaWQ9XCJkb0ltcG9ydENvbmZpZ1wiPuWvvOWFpTwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8YnV0dG9uIGlkPVwiY2xvc2VJbXBvcnRDb25maWdcIj7lhbPpl608L2J1dHRvbj5cclxuICAgICAgICBgO1xyXG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobW9kYWwpO1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkb0ltcG9ydENvbmZpZycpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgbmV3Q29uZmlnID0gSlNPTi5wYXJzZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW1wb3J0Q29uZmlnVGV4dCcpLnZhbHVlKTtcclxuICAgICAgICAgICAgICAgIHNpdGVDb25maWcgPSBuZXdDb25maWc7XHJcbiAgICAgICAgICAgICAgICBHTV9zZXRWYWx1ZSgnc2l0ZUNvbmZpZycsIHNpdGVDb25maWcpO1xyXG4gICAgICAgICAgICAgICAgYWxlcnQoJ+mFjee9ruW3suWvvOWFpe+8gScpO1xyXG4gICAgICAgICAgICAgICAgbW9kYWwucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgICAgIGFsZXJ0KCflr7zlhaXlpLHotKXvvIzor7fmo4Dmn6VKU09O5qC85byP44CCJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2xvc2VJbXBvcnRDb25maWcnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgICAgbW9kYWwucmVtb3ZlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8g5ZCv55So5YWD57Sg6YCJ5Y+W5qih5byP77ya54K55Ye76aG16Z2i5YWD57Sg5ZCO6Ieq5Yqo55Sf5oiQ5YW2IENTUyDpgInmi6nlmajloavlhaXlr7nlupTovpPlhaXmoYZcclxuICAgIGZ1bmN0aW9uIGVuYWJsZUVsZW1lbnRTZWxlY3Rpb24oaW5wdXRFbGVtZW50KSB7XHJcbiAgICAgICAgZnVuY3Rpb24gb25DbGljayhldmVudCkge1xyXG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICAgICAgY29uc3QgZWwgPSBldmVudC50YXJnZXQ7XHJcbiAgICAgICAgICAgIGNvbnN0IHNlbGVjdG9yID0gZ2V0Q3NzUGF0aChlbCk7XHJcbiAgICAgICAgICAgIGlucHV0RWxlbWVudC52YWx1ZSA9IHNlbGVjdG9yO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIG9uQ2xpY2ssIHRydWUpO1xyXG4gICAgICAgICAgICBpZiAodGVtcFN0eWxlKSB0ZW1wU3R5bGUucmVtb3ZlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IHRlbXBTdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XHJcbiAgICAgICAgdGVtcFN0eWxlLmlubmVySFRNTCA9IGAqOmhvdmVyIHsgb3V0bGluZTogMnB4IHNvbGlkIHJlZCAhaW1wb3J0YW50OyB9YDtcclxuICAgICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHRlbXBTdHlsZSk7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvbkNsaWNrLCB0cnVlKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyDnroDljZXlrp7njrAgQ1NTIOi3r+W+hOeUn+aIkFxyXG4gICAgZnVuY3Rpb24gZ2V0Q3NzUGF0aChlbCkge1xyXG4gICAgICAgIGlmICghKGVsIGluc3RhbmNlb2YgRWxlbWVudCkpXHJcbiAgICAgICAgICAgIHJldHVybiAnJztcclxuICAgICAgICBjb25zdCBwYXRoID0gW107XHJcbiAgICAgICAgd2hpbGUgKGVsLm5vZGVUeXBlID09PSBOb2RlLkVMRU1FTlRfTk9ERSkge1xyXG4gICAgICAgICAgICBsZXQgc2VsZWN0b3IgPSBlbC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xyXG4gICAgICAgICAgICBpZiAoZWwuaWQpIHtcclxuICAgICAgICAgICAgICAgIHNlbGVjdG9yICs9ICcjJyArIGVsLmlkO1xyXG4gICAgICAgICAgICAgICAgcGF0aC51bnNoaWZ0KHNlbGVjdG9yKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgbGV0IHNpYiA9IGVsLCBudGggPSAxO1xyXG4gICAgICAgICAgICAgICAgd2hpbGUgKHNpYiA9IHNpYi5wcmV2aW91c0VsZW1lbnRTaWJsaW5nKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNpYi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBzZWxlY3RvcilcclxuICAgICAgICAgICAgICAgICAgICAgICAgbnRoKys7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAobnRoICE9PSAxKVxyXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yICs9IGA6bnRoLW9mLXR5cGUoJHtudGh9KWA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcGF0aC51bnNoaWZ0KHNlbGVjdG9yKTtcclxuICAgICAgICAgICAgZWwgPSBlbC5wYXJlbnROb2RlO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcGF0aC5qb2luKFwiID4gXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKioqKioqKioqKioqKioqKiDov4fmu6TmnaHku7bphY3nva7vvIjoh6rliqjmqKHlvI/vvIkgKioqKioqKioqKioqKioqKiovXHJcbiAgICAvLyDlvLnlh7rov4fmu6TmnaHku7blr7nor53moYbvvIzlhYHorrjlr7nlkITlrZfmrrXorr7nva7mnaHku7bvvIjmlK/mjIHmt7vliqDjgIHliKDpmaTmnaHku7blkozorr7nva7nu4TlkIjmlrnlvI/vvIlcclxuICAgIGZ1bmN0aW9uIG9wZW5GaWx0ZXJNb2RhbCgpIHtcclxuICAgICAgICAvLyDpu5jorqTkuLrmr4/kuKrlrZfmrrXliJvlu7rnqbrmnaHku7ZcclxuICAgICAgICBmaWx0ZXJDb25maWcgPSB7IGdsb2JhbE9wOiBcIkFORFwiLCBmaWVsZHM6IHt9IH07XHJcbiAgICAgICAgT2JqZWN0LmtleXMoY3VycmVudENvbmZpZy5maWVsZHMpLmZvckVhY2goZmllbGQgPT4ge1xyXG4gICAgICAgICAgICBmaWx0ZXJDb25maWcuZmllbGRzW2ZpZWxkXSA9IHsgb3A6IFwiQU5EXCIsIGNvbmRpdGlvbnM6IFtdIH07XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgY29uc3QgbW9kYWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBtb2RhbC5jbGFzc05hbWUgPSAnY29uZmlnLW1vZGFsJztcclxuICAgICAgICBtb2RhbC5zdHlsZS53aWR0aCA9ICc2MDBweCc7XHJcbiAgICAgICAgbW9kYWwuc3R5bGUuekluZGV4ID0gOTk5OTk5OTk5OTtcclxuICAgICAgICBtb2RhbC5pbm5lckhUTUwgPSBgXHJcbiAgICAgICAgICAgIDxoMz7orr7nva7ov4fmu6TmnaHku7Y8L2gzPlxyXG4gICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgPGxhYmVsPuWFqOWxgOadoeS7tue7hOWQiDogPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgIDxzZWxlY3QgaWQ9XCJnbG9iYWwtY29tYmluZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJBTkRcIj5BTkQ8L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiT1JcIj5PUjwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgPC9zZWxlY3Q+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGlkPVwiZmlsdGVyRmllbGRzQ29udGFpbmVyXCI+XHJcbiAgICAgICAgICAgICAgICAke09iamVjdC5rZXlzKGN1cnJlbnRDb25maWcuZmllbGRzKS5tYXAoZmllbGQgPT4gYFxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJib3JkZXI6MXB4IHNvbGlkICNjY2M7IG1hcmdpbjoxMHB4IDA7IHBhZGRpbmc6NXB4O1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8aDQ+5a2X5q6177yaJHtmaWVsZH08L2g0PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPuadoeS7tue7hOWQiDogPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9XCJmaWVsZC1jb21iaW5lXCIgZGF0YS1maWVsZD1cIiR7ZmllbGR9XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIkFORFwiPkFORDwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJPUlwiPk9SPC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb25kaXRpb25zLWNvbnRhaW5lclwiIGRhdGEtZmllbGQ9XCIke2ZpZWxkfVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDmnaHku7booYzlsIblnKjmraTmt7vliqAgLS0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYWRkLWNvbmRpdGlvblwiIGRhdGEtZmllbGQ9XCIke2ZpZWxkfVwiPua3u+WKoOadoeS7tjwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgYCkuam9pbignJyl9XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8YnI+XHJcbiAgICAgICAgICAgIDxidXR0b24gaWQ9XCJjb25maXJtRmlsdGVyXCI+56Gu6K6k6L+H5rukPC9idXR0b24+XHJcbiAgICAgICAgICAgIDxidXR0b24gaWQ9XCJjYW5jZWxGaWx0ZXJcIj7lj5bmtog8L2J1dHRvbj5cclxuICAgICAgICBgO1xyXG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobW9kYWwpO1xyXG5cclxuICAgICAgICAvLyDnu5HlrprigJzmt7vliqDmnaHku7bigJ3mjInpkq7kuovku7ZcclxuICAgICAgICBtb2RhbC5xdWVyeVNlbGVjdG9yQWxsKCcuYWRkLWNvbmRpdGlvbicpLmZvckVhY2goYnRuID0+IHtcclxuICAgICAgICAgICAgYnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBmaWVsZCA9IGUudGFyZ2V0LmdldEF0dHJpYnV0ZSgnZGF0YS1maWVsZCcpO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgY29udGFpbmVyID0gbW9kYWwucXVlcnlTZWxlY3RvcihgLmNvbmRpdGlvbnMtY29udGFpbmVyW2RhdGEtZmllbGQ9XCIke2ZpZWxkfVwiXWApO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgY29uZGl0aW9uUm93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgICAgICAgICBjb25kaXRpb25Sb3cuY2xhc3NOYW1lID0gJ2NvbmRpdGlvbi1yb3cnO1xyXG4gICAgICAgICAgICAgICAgY29uZGl0aW9uUm93LmlubmVySFRNTCA9IGBcclxuICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGNsYXNzPVwiY29uZGl0aW9uLW9wZXJhdG9yXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJjb250YWluc1wiPuWMheWQqzwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwibm90X2NvbnRhaW5zXCI+5LiN5YyF5ZCrPC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJsdFwiPuWwj+S6jjwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiZ3RcIj7lpKfkuo48L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cImVxXCI+562J5LqOPC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+XHJcbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJjb25kaXRpb24tdmFsdWVcIiBwbGFjZWhvbGRlcj1cIuadoeS7tuWAvFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJyZW1vdmUtY29uZGl0aW9uXCI+5Yig6ZmkPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICBgO1xyXG4gICAgICAgICAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGNvbmRpdGlvblJvdyk7XHJcbiAgICAgICAgICAgICAgICAvLyDliKDpmaTmjInpkq5cclxuICAgICAgICAgICAgICAgIGNvbmRpdGlvblJvdy5xdWVyeVNlbGVjdG9yKCcucmVtb3ZlLWNvbmRpdGlvbicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbmRpdGlvblJvdy5yZW1vdmUoKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbmZpcm1GaWx0ZXInKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgICAgLy8g5pu05paw5YWo5bGA5p2h5Lu257uE5ZCIXHJcbiAgICAgICAgICAgIGZpbHRlckNvbmZpZy5nbG9iYWxPcCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdnbG9iYWwtY29tYmluZScpLnZhbHVlO1xyXG4gICAgICAgICAgICAvLyDpgY3ljoblkITlrZfmrrXvvIzorrDlvZXmnaHku7bnu4TlkIjlkozmr4/ooYzmnaHku7ZcclxuICAgICAgICAgICAgbW9kYWwucXVlcnlTZWxlY3RvckFsbCgnLmZpZWxkLWNvbWJpbmUnKS5mb3JFYWNoKHNlbGVjdCA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBmaWVsZCA9IHNlbGVjdC5nZXRBdHRyaWJ1dGUoJ2RhdGEtZmllbGQnKTtcclxuICAgICAgICAgICAgICAgIGZpbHRlckNvbmZpZy5maWVsZHNbZmllbGRdLm9wID0gc2VsZWN0LnZhbHVlO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgbW9kYWwucXVlcnlTZWxlY3RvckFsbCgnLmNvbmRpdGlvbnMtY29udGFpbmVyJykuZm9yRWFjaChjb250YWluZXIgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZmllbGQgPSBjb250YWluZXIuZ2V0QXR0cmlidXRlKCdkYXRhLWZpZWxkJyk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjb25kaXRpb25zID0gW107XHJcbiAgICAgICAgICAgICAgICBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLmNvbmRpdGlvbi1yb3cnKS5mb3JFYWNoKHJvdyA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgb3BlcmF0b3IgPSByb3cucXVlcnlTZWxlY3RvcignLmNvbmRpdGlvbi1vcGVyYXRvcicpLnZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gcm93LnF1ZXJ5U2VsZWN0b3IoJy5jb25kaXRpb24tdmFsdWUnKS52YWx1ZS50cmltKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbmRpdGlvbnMucHVzaCh7IG9wZXJhdG9yLCB2YWx1ZSB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIGZpbHRlckNvbmZpZy5maWVsZHNbZmllbGRdLmNvbmRpdGlvbnMgPSBjb25kaXRpb25zO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgLy8g5bqU55So6L+H5ruk5p2h5Lu25ZCO5pu05paw6aKE6KeI77yI5Y+v6YCJ5oup5LuF5a+85Ye66L+H5ruk5ZCO55qE5pWw5o2u77yJXHJcbiAgICAgICAgICAgIGNvbnN0IGZpbHRlcmVkRGF0YSA9IGFwcGx5RmlsdGVycyhjb2xsZWN0ZWREYXRhLCBmaWx0ZXJDb25maWcpO1xyXG4gICAgICAgICAgICBtb2RhbC5yZW1vdmUoKTtcclxuICAgICAgICAgICAgc2hvd1ByZXZpZXcoZmlsdGVyZWREYXRhKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NhbmNlbEZpbHRlcicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICBtb2RhbC5yZW1vdmUoKTtcclxuICAgICAgICAgICAgLy8g6Iul5Y+W5raI6L+H5ruk77yM5YiZ55u05o6l6aKE6KeI5omA5pyJ5pWw5o2uXHJcbiAgICAgICAgICAgIHNob3dQcmV2aWV3KCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8g5qC55o2uIGZpbHRlckNvbmZpZyDov4fmu6TmlbDmja7vvIzov5Tlm57ov4fmu6TlkI7nmoTmlbDmja7mlbDnu4RcclxuICAgIGZ1bmN0aW9uIGFwcGx5RmlsdGVycyhkYXRhLCBjb25maWcpIHtcclxuICAgICAgICByZXR1cm4gZGF0YS5maWx0ZXIoaXRlbSA9PiB7XHJcbiAgICAgICAgICAgIC8vIOWvueavj+S4quWtl+autei/m+ihjOi/h+a7pO+8jOWFiOiuoeeul+avj+S4quWtl+auteeahOadoeS7tue7k+aenFxyXG4gICAgICAgICAgICBjb25zdCBmaWVsZFJlc3VsdHMgPSBPYmplY3Qua2V5cyhjb25maWcuZmllbGRzKS5tYXAoZmllbGQgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgeyBvcCwgY29uZGl0aW9ucyB9ID0gY29uZmlnLmZpZWxkc1tmaWVsZF07XHJcbiAgICAgICAgICAgICAgICAvLyDoi6Xml6DmnaHku7bvvIzliJnorqTkuLror6XlrZfmrrXpgJrov4dcclxuICAgICAgICAgICAgICAgIGlmICghY29uZGl0aW9ucy5sZW5ndGgpIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICAgICAgLy8g6I635Y+W6K+l5a2X5q615YC8XHJcbiAgICAgICAgICAgICAgICBjb25zdCBmaWVsZFZhbHVlID0gaXRlbVtmaWVsZF0gfHwgJyc7XHJcbiAgICAgICAgICAgICAgICAvLyDorqHnrpfmr4/kuKrmnaHku7bnu5PmnpxcclxuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdHMgPSBjb25kaXRpb25zLm1hcChjb25kID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCB7IG9wZXJhdG9yLCB2YWx1ZSB9ID0gY29uZDtcclxuICAgICAgICAgICAgICAgICAgICBzd2l0Y2gob3BlcmF0b3IpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcImNvbnRhaW5zXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmllbGRWYWx1ZS5pbmNsdWRlcyh2YWx1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJub3RfY29udGFpbnNcIjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAhZmllbGRWYWx1ZS5pbmNsdWRlcyh2YWx1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJsdFwiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHBhcnNlRmxvYXQoZmllbGRWYWx1ZSkgPCBwYXJzZUZsb2F0KHZhbHVlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcImd0XCI6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcGFyc2VGbG9hdChmaWVsZFZhbHVlKSA+IHBhcnNlRmxvYXQodmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiZXFcIjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmaWVsZFZhbHVlID09PSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIC8vIOagueaNruacrOWtl+auteeahOe7hOWQiOaWueW8j++8iEFORC9PUu+8iee7hOWQiOe7k+aenFxyXG4gICAgICAgICAgICAgICAgaWYgKG9wID09PSBcIkFORFwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdHMuZXZlcnkociA9PiByID09PSB0cnVlKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdHMuc29tZShyID0+IHIgPT09IHRydWUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgLy8g5pyA5ZCO77yM5qC55o2u5YWo5bGA57uE5ZCI5p2h5Lu25Yaz5a6a5pyA57uI5piv5ZCm6YCa6L+HXHJcbiAgICAgICAgICAgIGlmIChjb25maWcuZ2xvYmFsT3AgPT09IFwiQU5EXCIpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmaWVsZFJlc3VsdHMuZXZlcnkociA9PiByID09PSB0cnVlKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmaWVsZFJlc3VsdHMuc29tZShyID0+IHIgPT09IHRydWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqKioqKioqKioqKioqKioqIOWIneWni+WMliAqKioqKioqKioqKioqKioqKi9cclxuICAgIGZ1bmN0aW9uIGluaXQoKSB7XHJcbiAgICAgICAgR01fYWRkU3R5bGUoYFxyXG4gICAgICAgICAgICAuY3Jhd2xlci1jaGVja2JveCB7IHRyYW5zZm9ybTogc2NhbGUoMS4yKTsgY3Vyc29yOiBwb2ludGVyOyB9XHJcbiAgICAgICAgICAgIHRhYmxlIHRkLCB0YWJsZSB0aCB7IG1heC13aWR0aDogMzAwcHg7IG92ZXJmbG93OiBoaWRkZW47IH1cclxuICAgICAgICAgICAgLmNvbmZpZy1tb2RhbCB7IHBvc2l0aW9uOiBmaXhlZDsgdG9wOiA1MCU7IGxlZnQ6IDUwJTsgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTsgcGFkZGluZzogMjBweDsgei1pbmRleDogMTAwMDA7IGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwwLDAsMC4zKTsgfVxyXG4gICAgICAgICAgICAuY29uZmlnLW1vZGFsIGlucHV0LCAuY29uZmlnLW1vZGFsIHRleHRhcmVhLCAuY29uZmlnLW1vZGFsIHNlbGVjdCB7IG1hcmdpbjogNXB4IDA7IH1cclxuICAgICAgICAgICAgLmZpZWxkLXJvdyB7IG1hcmdpbi1ib3R0b206IDVweDsgfVxyXG4gICAgICAgIGApO1xyXG4gICAgICAgIGluaXRDb25maWcoKTtcclxuICAgICAgICBpZiAoY3VycmVudENvbmZpZykge1xyXG4gICAgICAgICAgICBhZGRDb250cm9sUGFuZWwoKTtcclxuICAgICAgICAgICAgaWYgKG1hbnVhbE1vZGUpIHtcclxuICAgICAgICAgICAgICAgIGluaXRNYW51YWxNb2RlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwi5b2T5YmN56uZ54K55rKh5pyJ6YWN572u77yM6K+35Zyo6YWN572u6Z2i5p2/5Lit5re75Yqg6YWN572u77yBXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzZXRUaW1lb3V0KGluaXQsIDIwMDApO1xyXG59KSgpO1xyXG4iXSwibmFtZXMiOlsiX3JlZ2VuZXJhdG9yUnVudGltZSIsImUiLCJ0IiwiciIsIk9iamVjdCIsInByb3RvdHlwZSIsIm4iLCJoYXNPd25Qcm9wZXJ0eSIsIm8iLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiaSIsIlN5bWJvbCIsImEiLCJpdGVyYXRvciIsImMiLCJhc3luY0l0ZXJhdG9yIiwidSIsInRvU3RyaW5nVGFnIiwiZGVmaW5lIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwid3JhcCIsIkdlbmVyYXRvciIsImNyZWF0ZSIsIkNvbnRleHQiLCJtYWtlSW52b2tlTWV0aG9kIiwidHJ5Q2F0Y2giLCJ0eXBlIiwiYXJnIiwiY2FsbCIsImgiLCJsIiwiZiIsInMiLCJ5IiwiR2VuZXJhdG9yRnVuY3Rpb24iLCJHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSIsInAiLCJkIiwiZ2V0UHJvdG90eXBlT2YiLCJ2IiwidmFsdWVzIiwiZyIsImRlZmluZUl0ZXJhdG9yTWV0aG9kcyIsImZvckVhY2giLCJfaW52b2tlIiwiQXN5bmNJdGVyYXRvciIsImludm9rZSIsIl90eXBlb2YiLCJyZXNvbHZlIiwiX19hd2FpdCIsInRoZW4iLCJjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZyIsIkVycm9yIiwiZG9uZSIsIm1ldGhvZCIsImRlbGVnYXRlIiwibWF5YmVJbnZva2VEZWxlZ2F0ZSIsInNlbnQiLCJfc2VudCIsImRpc3BhdGNoRXhjZXB0aW9uIiwiYWJydXB0IiwiVHlwZUVycm9yIiwicmVzdWx0TmFtZSIsIm5leHQiLCJuZXh0TG9jIiwicHVzaFRyeUVudHJ5IiwidHJ5TG9jIiwiY2F0Y2hMb2MiLCJmaW5hbGx5TG9jIiwiYWZ0ZXJMb2MiLCJ0cnlFbnRyaWVzIiwicHVzaCIsInJlc2V0VHJ5RW50cnkiLCJjb21wbGV0aW9uIiwicmVzZXQiLCJpc05hTiIsImxlbmd0aCIsImRpc3BsYXlOYW1lIiwiaXNHZW5lcmF0b3JGdW5jdGlvbiIsImNvbnN0cnVjdG9yIiwibmFtZSIsIm1hcmsiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsImF3cmFwIiwiYXN5bmMiLCJQcm9taXNlIiwia2V5cyIsInJldmVyc2UiLCJwb3AiLCJwcmV2IiwiY2hhckF0Iiwic2xpY2UiLCJzdG9wIiwicnZhbCIsImhhbmRsZSIsImNvbXBsZXRlIiwiZmluaXNoIiwiZGVsZWdhdGVZaWVsZCIsImFzeW5jR2VuZXJhdG9yU3RlcCIsIl9zbGljZWRUb0FycmF5IiwiQXJyYXkiLCJpc0FycmF5IiwiX2FycmF5V2l0aEhvbGVzIiwiX2l0ZXJhYmxlVG9BcnJheUxpbWl0IiwiX2FycmF5TGlrZVRvQXJyYXkiLCJ0b1N0cmluZyIsImZyb20iLCJ0ZXN0IiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwiX25vbkl0ZXJhYmxlUmVzdCIsInNpdGVDb25maWciLCJHTV9nZXRWYWx1ZSIsImN1cnJlbnRDb25maWciLCJjdXJyZW50RG9tYWluIiwiY29sbGVjdGVkRGF0YSIsIm1hbnVhbE1vZGUiLCJmaWx0ZXJDb25maWciLCJ0b2dnbGVNb2RlIiwidGhpcyIsInRleHRDb250ZW50IiwiY29uY2F0IiwiaW5pdE1hbnVhbE1vZGUiLCJfc3RhcnRBdXRvQ3Jhd2wiLCJhcHBseSIsImFyZ3VtZW50cyIsInN0YXJ0QXV0b0NyYXdsIiwiZ2xvYmFsT3AiLCJmaWVsZHMiLCJmaWVsZCIsIm9wIiwiY29uZGl0aW9ucyIsIm1vZGFsIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwic3R5bGUiLCJ3aWR0aCIsInpJbmRleCIsImlubmVySFRNTCIsIm1hcCIsImpvaW4iLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiYnRuIiwiYWRkRXZlbnRMaXN0ZW5lciIsInRhcmdldCIsImdldEF0dHJpYnV0ZSIsImNvbnRhaW5lciIsInF1ZXJ5U2VsZWN0b3IiLCJjb25kaXRpb25Sb3ciLCJyZW1vdmUiLCJnZXRFbGVtZW50QnlJZCIsInNlbGVjdCIsInJvdyIsIm9wZXJhdG9yIiwidHJpbSIsImNvbmZpZyIsImZpbHRlcmVkRGF0YSIsImZpbHRlciIsIml0ZW0iLCJmaWVsZFJlc3VsdHMiLCJfY29uZmlnJGZpZWxkcyRmaWVsZCIsImZpZWxkVmFsdWUiLCJyZXN1bHRzIiwiY29uZCIsImluY2x1ZGVzIiwicGFyc2VGbG9hdCIsImV2ZXJ5Iiwic29tZSIsInNob3dQcmV2aWV3Iiwib3BlbkZpbHRlck1vZGFsIiwiYWRkQ2hlY2tib3hlcyIsIk11dGF0aW9uT2JzZXJ2ZXIiLCJvYnNlcnZlIiwiY2hpbGRMaXN0Iiwic3VidHJlZSIsIml0ZW1TZWxlY3RvciIsImNoZWNrYm94IiwicG9zaXRpb24iLCJyaWdodCIsInRvcCIsImRhdGEiLCJleHRyYWN0SXRlbURhdGEiLCJjaGVja2VkIiwiaWQiLCJwcmVwZW5kIiwiTWF0aCIsInJhbmRvbSIsInN1YnN0ciIsInNldEF0dHJpYnV0ZSIsIl9pIiwiX09iamVjdCRlbnRyaWVzIiwiZW50cmllcyIsIl9PYmplY3QkZW50cmllcyRfaSIsInNlbGVjdG9yIiwiZWwiLCJzcmMiLCJfY2FsbGVlIiwibmV4dFBhZ2UiLCJfY29udGV4dCIsIm5leHRQYWdlU2VsZWN0b3IiLCJzY3JvbGxJbnRvVmlldyIsImJlaGF2aW9yIiwiYmxvY2siLCJ3YWl0Rm9yUGFnZUxvYWQiLCJkaXNhYmxlZCIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwiY2xpY2siLCJfbmV4dCIsIl90aHJvdyIsImludGVydmFsIiwiY3Jhd2xJbnRlcnZhbCIsInNldFRpbWVvdXQiLCJkYXRhVG9TaG93IiwidW5kZWZpbmVkIiwia2V5IiwiZGF0YVRvRXhwb3J0Iiwid3MiLCJ3YiIsIlhMU1giLCJ1dGlscyIsImpzb25fdG9fc2hlZXQiLCJib29rX25ldyIsImJvb2tfYXBwZW5kX3NoZWV0Iiwid3JpdGVGaWxlIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwib3BlbkNvbmZpZ1BhbmVsIiwiX3JlZiIsIl9yZWYyIiwicGFyc2VJbnQiLCJuZXdGaWVsZHMiLCJHTV9zZXRWYWx1ZSIsImFsZXJ0Iiwib3BlbkV4cG9ydENvbmZpZ01vZGFsIiwiSlNPTiIsInN0cmluZ2lmeSIsIm9wZW5JbXBvcnRDb25maWdNb2RhbCIsIm5ld0NvbmZpZyIsInBhcnNlIiwicGFuZWwiLCJHTV9hZGRTdHlsZSIsImhvc3QiLCJsb2NhdGlvbiIsImhvc3RuYW1lIiwiZG9tYWluIiwiaW5pdENvbmZpZyIsImNvbnNvbGUiLCJlcnJvciJdLCJzb3VyY2VSb290IjoiIn0=